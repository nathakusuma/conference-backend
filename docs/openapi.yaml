openapi: 3.1.0
info:
  title: Astungkara
  version: '1.0.0'

servers:
  - url: "https://astungkara.nathakusuma.com/api/v1"
    description: Production server
  - url: "http://localhost/api/v1"
    description: Local development server

components:
  schemas:
    # Common request/response fields
    EmailField:
      type: string
      format: email
      examples:
        - "astungkara@nathakusuma.com"

    OTPField:
      type: string
      minLength: 6
      maxLength: 6
      pattern: "^[0-9]{6}$"
      examples:
        - "123456"

    PasswordField:
      type: string
      format: password
      examples:
        - "very-secure-password"

    # User related schemas
    User:
      type: object
      required:
        - id
        - name
        - email
        - role
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          examples:
            - "01948552-2721-787b-8d97-7c463fda4a9e"
        name:
          type: string
          examples:
            - "I Putu Natha Kusuma"
        email:
          $ref: '#/components/schemas/EmailField'
        role:
          type: string
          enum: [ super_admin, admin, user, event_coordinator ]
          examples:
            - "user"
        created_at:
          type: string
          format: date-time
          examples:
            - "2025-01-25T20:05:41.282989Z"
        updated_at:
          type: string
          format: date-time
          examples:
            - "2025-01-25T20:05:41.282989Z"

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
        detail:
          type: [ object, "null" ]
          description: Additional error details, can be any type
        error_code:
          type: [ string, "null" ]
          description: Error code identifier
        trace_id:
          type: [ string, "null" ]
          format: uuid
          description: Unique trace ID for error tracking

  responses:
    LoginSuccess:
      description: Successful authentication response
      content:
        application/json:
          schema:
            type: object
            required:
              - access_token
              - refresh_token
              - user
            properties:
              access_token:
                type: string
                examples:
                  - "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
              refresh_token:
                type: string
                examples:
                  - "XcQqHgyLo99ywBFFQd4bxUsaR6RK2kJWGOqdFSX7xWW8kuNdTw1OoWivF1jS9Yrm"
              user:
                $ref: '#/components/schemas/User'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Something went wrong in our server. Please try again later."
            error_code: "INTERNAL_SERVER_ERROR"
            trace_id: "652e0a03-1c0a-404a-ac47-685d7ecb22d8"

    FailParseRequest:
      description: Failed to parse request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: "Failed to parse request. Please check your request format."
            error_code: "FAIL_PARSE_REQUEST"

paths:
  /auth/register/otp:
    post:
      summary: Request OTP Register User
      operationId: requestOTPRegisterUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  $ref: '#/components/schemas/EmailField'
      responses:
        '204':
          description: Success - OTP sent successfully
        '400':
          $ref: '#/components/responses/FailParseRequest'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "There are invalid fields in your request. Please check and try again"
                detail:
                  - email:
                      tag: "required"
                      param: ""
                      translation: "Email is a required field"
                error_code: "VALIDATION_ERROR"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/register/otp/check:
    post:
      summary: Check OTP Register User
      operationId: checkOTPRegisterUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  $ref: '#/components/schemas/EmailField'
                otp:
                  $ref: '#/components/schemas/OTPField'
      responses:
        '204':
          description: Success - OTP verification successful
        '400':
          $ref: '#/components/responses/FailParseRequest'
        '401':
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Invalid OTP. Please try again or request a new OTP."
                error_code: "INVALID_OTP"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "There are invalid fields in your request. Please check and try again"
                detail:
                  - email:
                      tag: "required"
                      param: ""
                      translation: "Email is a required field"
                  - otp:
                      tag: "required"
                      param: ""
                      translation: "OTP is a required field"
                error_code: "VALIDATION_ERROR"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/register:
    post:
      summary: Register User
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
                - name
                - password
              properties:
                email:
                  $ref: '#/components/schemas/EmailField'
                otp:
                  $ref: '#/components/schemas/OTPField'
                name:
                  type: string
                  examples:
                    - "I Putu Natha Kusuma"
                password:
                  $ref: '#/components/schemas/PasswordField'
      responses:
        '201':
          description: Success
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/FailParseRequest'
        '401':
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Invalid OTP. Please try again or request a new OTP."
                error_code: "INVALID_OTP"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "There are invalid fields in your request. Please check and try again"
                detail:
                  - email:
                      tag: "required"
                      param: ""
                      translation: "Email is a required field"
                  - otp:
                      tag: "required"
                      param: ""
                      translation: "OTP is a required field"
                  - name:
                      tag: "required"
                      param: ""
                      translation: "Name is a required field"
                  - password:
                      tag: "required"
                      param: ""
                      translation: "Password is a required field"
                error_code: "VALIDATION_ERROR"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      summary: Login User
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  $ref: '#/components/schemas/EmailField'
                password:
                  $ref: '#/components/schemas/PasswordField'
      responses:
        '200':
          description: Success
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/FailParseRequest'
        '401':
          description: Credentials Not Match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Credentials do not match. Please try again."
                error_code: "CREDENTIALS_NOT_MATCH"
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "User not found. Please register first."
                error_code: "NOT_FOUND"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "There are invalid fields in your request. Please check and try again"
                detail:
                  - email:
                      tag: "required"
                      param: ""
                      translation: "Email is a required field"
                  - password:
                      tag: "required"
                      param: ""
                      translation: "Password is a required field"
                error_code: "VALIDATION_ERROR"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/refresh:
    post:
      summary: Refresh Access Token
      operationId: refreshAccessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  examples:
                    - "8up9Ltl48d1EtzpffHGScCJTpyNGcyPq"
      responses:
        '200':
          description: Success
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/FailParseRequest'
        '401':
          description: Invalid Refresh Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Session is invalid. Please login again."
                error_code: "INVALID_REFRESH_TOKEN"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "There are invalid fields in your request. Please check and try again"
                detail:
                  - refresh_token:
                      tag: "required"
                      param: ""
                      translation: "RefreshToken is a required field"
                error_code: "VALIDATION_ERROR"
        '500':
          $ref: '#/components/responses/InternalServerError'
